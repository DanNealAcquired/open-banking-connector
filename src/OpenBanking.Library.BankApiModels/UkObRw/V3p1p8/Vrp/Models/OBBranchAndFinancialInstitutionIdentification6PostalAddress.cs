// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace FinnovationLabs.OpenBanking.Library.BankApiModels.UkObRw.V3p1p8.Vrp.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// ^ 0..1) | `PostalAddress` |Information that locates and identifies a
    /// specific address, as defined by postal services.| OBPostalAddress6
    /// </summary>
    public partial class OBBranchAndFinancialInstitutionIdentification6PostalAddress
    {
        /// <summary>
        /// Initializes a new instance of the
        /// OBBranchAndFinancialInstitutionIdentification6PostalAddress class.
        /// </summary>
        public OBBranchAndFinancialInstitutionIdentification6PostalAddress()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// OBBranchAndFinancialInstitutionIdentification6PostalAddress class.
        /// </summary>
        /// <param name="addressType">^ 0..1) | `PostalAddress. AddressType`
        /// |Identifies the nature of the postal address. |OBAddressTypeCode
        /// |Business Correspondence DeliveryTo MailTo POBox Postal Residential
        /// Statement</param>
        /// <param name="department">^ 0..1) | `PostalAddress. Department`
        /// |Identification of a division of a large organisation or building.
        /// | Max70Text</param>
        /// <param name="subDepartment">^ 0..1) | `PostalAddress.
        /// SubDepartment` |Identification of a sub-division of a large
        /// organisation or building. |Max70Text</param>
        /// <param name="streetName">^ 0..1) | `PostalAddress. StreetName`
        /// |Name of a street or thoroughfare.    |Max70Text</param>
        /// <param name="buildingNumber">^ 0..1) | `PostalAddress.
        /// BuildingNumber` |Number that identifies the position of a building
        /// on a street.   |Max16Text</param>
        /// <param name="postCode">^ 0..1) | `PostalAddress. PostCode`
        /// |Identifier consisting of a group of letters and. or numbers that
        /// is added to a postal address to assist the sorting of mail.
        /// |Max16Text</param>
        /// <param name="townName">^ 0..1) | `PostalAddress. TownName` |Name of
        /// a built-up area, with defined boundaries, and a local government.
        /// |Max35Text</param>
        /// <param name="countrySubDivision">^ 0..1) | `PostalAddress.
        /// CountrySubDivision` |Identifies a subdivision of a country such as
        /// state, region, county.      |Max35Text</param>
        /// <param name="country">^ 0..1) | `PostalAddress. Country` | Nation
        /// with its own government.      |CountryCode</param>
        public OBBranchAndFinancialInstitutionIdentification6PostalAddress(string addressType = default(string), string department = default(string), string subDepartment = default(string), string streetName = default(string), string buildingNumber = default(string), string postCode = default(string), string townName = default(string), string countrySubDivision = default(string), string country = default(string), IList<string> addressLine = default(IList<string>))
        {
            AddressType = addressType;
            Department = department;
            SubDepartment = subDepartment;
            StreetName = streetName;
            BuildingNumber = buildingNumber;
            PostCode = postCode;
            TownName = townName;
            CountrySubDivision = countrySubDivision;
            Country = country;
            AddressLine = addressLine;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets ^ 0..1) | `PostalAddress. AddressType` |Identifies the
        /// nature of the postal address. |OBAddressTypeCode  |Business
        /// Correspondence DeliveryTo MailTo POBox Postal Residential Statement
        /// </summary>
        [JsonProperty(PropertyName = "AddressType")]
        public string AddressType { get; set; }

        /// <summary>
        /// Gets or sets ^ 0..1) | `PostalAddress. Department` |Identification
        /// of a division of a large organisation or building. | Max70Text
        /// </summary>
        [JsonProperty(PropertyName = "Department")]
        public string Department { get; set; }

        /// <summary>
        /// Gets or sets ^ 0..1) | `PostalAddress. SubDepartment`
        /// |Identification of a sub-division of a large organisation or
        /// building. |Max70Text
        /// </summary>
        [JsonProperty(PropertyName = "SubDepartment")]
        public string SubDepartment { get; set; }

        /// <summary>
        /// Gets or sets ^ 0..1) | `PostalAddress. StreetName`   |Name of a
        /// street or thoroughfare.    |Max70Text
        /// </summary>
        [JsonProperty(PropertyName = "StreetName")]
        public string StreetName { get; set; }

        /// <summary>
        /// Gets or sets ^ 0..1) | `PostalAddress. BuildingNumber` |Number that
        /// identifies the position of a building on a street.   |Max16Text
        /// </summary>
        [JsonProperty(PropertyName = "BuildingNumber")]
        public string BuildingNumber { get; set; }

        /// <summary>
        /// Gets or sets ^ 0..1) | `PostalAddress. PostCode` |Identifier
        /// consisting of a group of letters and. or numbers that is added to a
        /// postal address to assist the sorting of mail.    |Max16Text
        /// </summary>
        [JsonProperty(PropertyName = "PostCode")]
        public string PostCode { get; set; }

        /// <summary>
        /// Gets or sets ^ 0..1) | `PostalAddress. TownName` |Name of a
        /// built-up area, with defined boundaries, and a local government.
        /// |Max35Text
        /// </summary>
        [JsonProperty(PropertyName = "TownName")]
        public string TownName { get; set; }

        /// <summary>
        /// Gets or sets ^ 0..1) | `PostalAddress. CountrySubDivision`
        /// |Identifies a subdivision of a country such as state, region,
        /// county.      |Max35Text
        /// </summary>
        [JsonProperty(PropertyName = "CountrySubDivision")]
        public string CountrySubDivision { get; set; }

        /// <summary>
        /// Gets or sets ^ 0..1) | `PostalAddress. Country` | Nation with its
        /// own government.      |CountryCode
        /// </summary>
        [JsonProperty(PropertyName = "Country")]
        public string Country { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AddressLine")]
        public IList<string> AddressLine { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (AddressLine != null)
            {
                if (AddressLine.Count > 7)
                {
                    throw new ValidationException(ValidationRules.MaxItems, "AddressLine", 7);
                }
                if (AddressLine.Count < 0)
                {
                    throw new ValidationException(ValidationRules.MinItems, "AddressLine", 0);
                }
            }
        }
    }
}
