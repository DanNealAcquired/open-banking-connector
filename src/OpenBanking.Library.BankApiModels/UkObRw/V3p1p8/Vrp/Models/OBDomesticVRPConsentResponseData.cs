// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace FinnovationLabs.OpenBanking.Library.BankApiModels.UkObRw.V3p1p8.Vrp.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class OBDomesticVRPConsentResponseData
    {
        /// <summary>
        /// Initializes a new instance of the OBDomesticVRPConsentResponseData
        /// class.
        /// </summary>
        public OBDomesticVRPConsentResponseData()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the OBDomesticVRPConsentResponseData
        /// class.
        /// </summary>
        /// <param name="consentId">Unique identification as assigned by the
        /// ASPSP to uniquely identify the consent resource.      | Max128Text
        /// </param>
        /// <param name="creationDateTime">Date and time at which the resource
        /// was created.|ISODateTime
        /// </param>
        /// <param name="status">Specifies the status of resource in code form.
        /// |Authorised AwaitingAuthorisation Rejected Revoked Expired
        /// </param>
        /// <param name="statusUpdateDateTime">Date and time at which the
        /// resource status was updated.  | ISODateTime
        /// </param>
        /// <param name="readRefundAccount">Indicates whether information about
        /// RefundAccount should be included in the payment response.
        /// . Possible values include: 'Yes', 'No'</param>
        /// <param name="debtorAccount">The value must be populated for GET
        /// responses once the consent is approved.</param>
        public OBDomesticVRPConsentResponseData(string consentId, System.DateTimeOffset creationDateTime, string status, System.DateTimeOffset statusUpdateDateTime, OBDomesticVRPControlParameters controlParameters, OBDomesticVRPInitiation initiation, OBDomesticVRPConsentResponseDataReadRefundAccountEnum? readRefundAccount = default(OBDomesticVRPConsentResponseDataReadRefundAccountEnum?), OBCashAccountDebtorWithName debtorAccount = default(OBCashAccountDebtorWithName))
        {
            ReadRefundAccount = readRefundAccount;
            ConsentId = consentId;
            CreationDateTime = creationDateTime;
            Status = status;
            StatusUpdateDateTime = statusUpdateDateTime;
            ControlParameters = controlParameters;
            Initiation = initiation;
            DebtorAccount = debtorAccount;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets indicates whether information about RefundAccount
        /// should be included in the payment response.
        /// . Possible values include: 'Yes', 'No'
        /// </summary>
        [JsonProperty(PropertyName = "ReadRefundAccount")]
        public OBDomesticVRPConsentResponseDataReadRefundAccountEnum? ReadRefundAccount { get; set; }

        /// <summary>
        /// Gets or sets unique identification as assigned by the ASPSP to
        /// uniquely identify the consent resource.      | Max128Text
        ///
        /// </summary>
        [JsonProperty(PropertyName = "ConsentId")]
        public string ConsentId { get; set; }

        /// <summary>
        /// Gets or sets date and time at which the resource was
        /// created.|ISODateTime
        ///
        /// </summary>
        [JsonProperty(PropertyName = "CreationDateTime")]
        public System.DateTimeOffset CreationDateTime { get; set; }

        /// <summary>
        /// Gets or sets specifies the status of resource in code form.
        /// |Authorised AwaitingAuthorisation Rejected Revoked Expired
        ///
        /// </summary>
        [JsonProperty(PropertyName = "Status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets date and time at which the resource status was
        /// updated.  | ISODateTime
        ///
        /// </summary>
        [JsonProperty(PropertyName = "StatusUpdateDateTime")]
        public System.DateTimeOffset StatusUpdateDateTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ControlParameters")]
        public OBDomesticVRPControlParameters ControlParameters { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Initiation")]
        public OBDomesticVRPInitiation Initiation { get; set; }

        /// <summary>
        /// Gets or sets the value must be populated for GET responses once the
        /// consent is approved.
        /// </summary>
        [JsonProperty(PropertyName = "DebtorAccount")]
        public OBCashAccountDebtorWithName DebtorAccount { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (ConsentId == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ConsentId");
            }
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
            if (ControlParameters == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ControlParameters");
            }
            if (Initiation == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Initiation");
            }
            if (ControlParameters != null)
            {
                ControlParameters.Validate();
            }
            if (Initiation != null)
            {
                Initiation.Validate();
            }
            if (DebtorAccount != null)
            {
                DebtorAccount.Validate();
            }
        }
    }
}
