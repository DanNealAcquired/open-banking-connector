// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;

namespace AccountAndTransactionAPISpecification.Models
{
    internal static partial class OBFeeFrequency1Code3EnumExtensions
    {
        public static string ToSerialString(this OBFeeFrequency1Code3Enum value) => value switch
        {
            OBFeeFrequency1Code3Enum.Feac => "FEAC",
            OBFeeFrequency1Code3Enum.Feao => "FEAO",
            OBFeeFrequency1Code3Enum.Fecp => "FECP",
            OBFeeFrequency1Code3Enum.Feda => "FEDA",
            OBFeeFrequency1Code3Enum.Feho => "FEHO",
            OBFeeFrequency1Code3Enum.FEI => "FEI",
            OBFeeFrequency1Code3Enum.Femo => "FEMO",
            OBFeeFrequency1Code3Enum.Feoa => "FEOA",
            OBFeeFrequency1Code3Enum.Feot => "FEOT",
            OBFeeFrequency1Code3Enum.Fepc => "FEPC",
            OBFeeFrequency1Code3Enum.Feph => "FEPH",
            OBFeeFrequency1Code3Enum.Fepo => "FEPO",
            OBFeeFrequency1Code3Enum.Feps => "FEPS",
            OBFeeFrequency1Code3Enum.Fept => "FEPT",
            OBFeeFrequency1Code3Enum.Fepta => "FEPTA",
            OBFeeFrequency1Code3Enum.Feptp => "FEPTP",
            OBFeeFrequency1Code3Enum.Fequ => "FEQU",
            OBFeeFrequency1Code3Enum.Fesm => "FESM",
            OBFeeFrequency1Code3Enum.Fest => "FEST",
            OBFeeFrequency1Code3Enum.Fewe => "FEWE",
            OBFeeFrequency1Code3Enum.Feye => "FEYE",
            _ => throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown OBFeeFrequency1Code3Enum value.")
        };

        public static OBFeeFrequency1Code3Enum ToOBFeeFrequency1Code3Enum(this string value)
        {
            if (string.Equals(value, "FEAC", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Feac;
            if (string.Equals(value, "FEAO", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Feao;
            if (string.Equals(value, "FECP", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Fecp;
            if (string.Equals(value, "FEDA", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Feda;
            if (string.Equals(value, "FEHO", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Feho;
            if (string.Equals(value, "FEI", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.FEI;
            if (string.Equals(value, "FEMO", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Femo;
            if (string.Equals(value, "FEOA", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Feoa;
            if (string.Equals(value, "FEOT", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Feot;
            if (string.Equals(value, "FEPC", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Fepc;
            if (string.Equals(value, "FEPH", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Feph;
            if (string.Equals(value, "FEPO", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Fepo;
            if (string.Equals(value, "FEPS", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Feps;
            if (string.Equals(value, "FEPT", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Fept;
            if (string.Equals(value, "FEPTA", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Fepta;
            if (string.Equals(value, "FEPTP", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Feptp;
            if (string.Equals(value, "FEQU", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Fequ;
            if (string.Equals(value, "FESM", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Fesm;
            if (string.Equals(value, "FEST", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Fest;
            if (string.Equals(value, "FEWE", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Fewe;
            if (string.Equals(value, "FEYE", StringComparison.InvariantCultureIgnoreCase)) return OBFeeFrequency1Code3Enum.Feye;
            throw new ArgumentOutOfRangeException(nameof(value), value, "Unknown OBFeeFrequency1Code3Enum value.");
        }
    }
}
