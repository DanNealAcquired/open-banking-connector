// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace FinnovationLabs.OpenBanking.Library.BankApiModels.UkObRw.V3p1p7.Aisp.Models
{
    public partial class OBParty2
    {
        public static OBParty2 DeserializeOBParty2(JsonElement element)
        {
            string partyId = default;
            Optional<string> partyNumber = default;
            Optional<OBExternalPartyType1CodeEnum> partyType = default;
            Optional<string> name = default;
            Optional<string> fullLegalName = default;
            Optional<string> legalStructure = default;
            Optional<bool> beneficialOwnership = default;
            Optional<string> accountRole = default;
            Optional<string> emailAddress = default;
            Optional<string> phone = default;
            Optional<string> mobile = default;
            Optional<OBPartyRelationships1> relationships = default;
            Optional<IReadOnlyList<OBParty2AddressItem>> address = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("PartyId"))
                {
                    partyId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("PartyNumber"))
                {
                    partyNumber = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("PartyType"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    partyType = property.Value.GetString().ToOBExternalPartyType1CodeEnum();
                    continue;
                }
                if (property.NameEquals("Name"))
                {
                    name = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("FullLegalName"))
                {
                    fullLegalName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("LegalStructure"))
                {
                    legalStructure = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("BeneficialOwnership"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    beneficialOwnership = property.Value.GetBoolean();
                    continue;
                }
                if (property.NameEquals("AccountRole"))
                {
                    accountRole = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("EmailAddress"))
                {
                    emailAddress = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Phone"))
                {
                    phone = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Mobile"))
                {
                    mobile = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("Relationships"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    relationships = OBPartyRelationships1.DeserializeOBPartyRelationships1(property.Value);
                    continue;
                }
                if (property.NameEquals("Address"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        property.ThrowNonNullablePropertyIsNull();
                        continue;
                    }
                    List<OBParty2AddressItem> array = new List<OBParty2AddressItem>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(OBParty2AddressItem.DeserializeOBParty2AddressItem(item));
                    }
                    address = array;
                    continue;
                }
            }
            return new OBParty2(partyId, partyNumber.Value, Optional.ToNullable(partyType), name.Value, fullLegalName.Value, legalStructure.Value, Optional.ToNullable(beneficialOwnership), accountRole.Value, emailAddress.Value, phone.Value, mobile.Value, relationships.Value, Optional.ToList(address));
        }
    }
}
