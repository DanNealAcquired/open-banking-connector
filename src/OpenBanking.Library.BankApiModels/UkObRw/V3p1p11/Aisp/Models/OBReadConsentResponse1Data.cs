// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace FinnovationLabs.OpenBanking.Library.BankApiModels.UkObRw.V3p1p11.Aisp.Models
{
    /// <summary> The OBReadConsentResponse1Data. </summary>
    public partial class OBReadConsentResponse1Data
    {
        /// <summary> Initializes a new instance of OBReadConsentResponse1Data. </summary>
        /// <param name="consentId"> Unique identification as assigned to identify the account access consent resource. </param>
        /// <param name="creationDateTime">
        /// Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </param>
        /// <param name="status"> Specifies the status of consent resource in code form. </param>
        /// <param name="statusUpdateDateTime">
        /// Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </param>
        /// <param name="permissions"></param>
        /// <exception cref="ArgumentNullException"> <paramref name="consentId"/> or <paramref name="permissions"/> is null. </exception>
        internal OBReadConsentResponse1Data(string consentId, DateTimeOffset creationDateTime, OBReadConsentResponse1DataStatusEnum status, DateTimeOffset statusUpdateDateTime, IEnumerable<OBReadConsentResponse1DataPermissionsEnum> permissions)
        {
            if (consentId == null)
            {
                throw new ArgumentNullException(nameof(consentId));
            }
            if (permissions == null)
            {
                throw new ArgumentNullException(nameof(permissions));
            }

            ConsentId = consentId;
            CreationDateTime = creationDateTime;
            Status = status;
            StatusUpdateDateTime = statusUpdateDateTime;
            Permissions = permissions.ToList();
        }

        /// <summary> Initializes a new instance of OBReadConsentResponse1Data. </summary>
        /// <param name="consentId"> Unique identification as assigned to identify the account access consent resource. </param>
        /// <param name="creationDateTime">
        /// Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </param>
        /// <param name="status"> Specifies the status of consent resource in code form. </param>
        /// <param name="statusUpdateDateTime">
        /// Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </param>
        /// <param name="permissions"></param>
        /// <param name="expirationDateTime">
        /// Specified date and time the permissions will expire.
        /// If this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </param>
        /// <param name="transactionFromDateTime">
        /// Specified start date and time for the transaction query period.
        /// If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </param>
        /// <param name="transactionToDateTime">
        /// Specified end date and time for the transaction query period.
        /// If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </param>
        internal OBReadConsentResponse1Data(string consentId, DateTimeOffset creationDateTime, OBReadConsentResponse1DataStatusEnum status, DateTimeOffset statusUpdateDateTime, IReadOnlyList<OBReadConsentResponse1DataPermissionsEnum> permissions, DateTimeOffset? expirationDateTime, DateTimeOffset? transactionFromDateTime, DateTimeOffset? transactionToDateTime)
        {
            ConsentId = consentId;
            CreationDateTime = creationDateTime;
            Status = status;
            StatusUpdateDateTime = statusUpdateDateTime;
            Permissions = permissions;
            ExpirationDateTime = expirationDateTime;
            TransactionFromDateTime = transactionFromDateTime;
            TransactionToDateTime = transactionToDateTime;
        }

        /// <summary> Unique identification as assigned to identify the account access consent resource. </summary>
        public string ConsentId { get; }
        /// <summary>
        /// Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </summary>
        public DateTimeOffset CreationDateTime { get; }
        /// <summary> Specifies the status of consent resource in code form. </summary>
        public OBReadConsentResponse1DataStatusEnum Status { get; }
        /// <summary>
        /// Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </summary>
        public DateTimeOffset StatusUpdateDateTime { get; }
        /// <summary> Gets the permissions. </summary>
        public IReadOnlyList<OBReadConsentResponse1DataPermissionsEnum> Permissions { get; }
        /// <summary>
        /// Specified date and time the permissions will expire.
        /// If this is not populated, the permissions will be open ended.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </summary>
        public DateTimeOffset? ExpirationDateTime { get; }
        /// <summary>
        /// Specified start date and time for the transaction query period.
        /// If this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </summary>
        public DateTimeOffset? TransactionFromDateTime { get; }
        /// <summary>
        /// Specified end date and time for the transaction query period.
        /// If this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. 
        /// All date-time fields in responses must include the timezone. An example is below:
        /// 2017-04-05T10:43:07+00:00
        /// </summary>
        public DateTimeOffset? TransactionToDateTime { get; }
    }
}
