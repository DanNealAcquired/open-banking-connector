// <auto-generated />
using System;
using FinnovationLabs.OpenBanking.Library.Connector.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FinnovationLabs.OpenBanking.Library.Connector.Migrations.PostgreSql
{
    [DbContext(typeof(PostgreSqlDbContext))]
    [Migration("20230406075130_UpdateBankRegistration")]
    partial class UpdateBankRegistration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.AccountAndTransaction.AccountAccessConsent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AccountAndTransactionApiId")
                        .HasColumnType("uuid")
                        .HasColumnName("account_and_transaction_api_id")
                        .HasColumnOrder(10);

                    b.Property<DateTimeOffset>("AuthContextModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("auth_context_modified")
                        .HasColumnOrder(103);

                    b.Property<string>("AuthContextModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("auth_context_modified_by")
                        .HasColumnOrder(104);

                    b.Property<string>("AuthContextNonce")
                        .HasColumnType("text")
                        .HasColumnName("auth_context_nonce")
                        .HasColumnOrder(102);

                    b.Property<string>("AuthContextState")
                        .HasColumnType("text")
                        .HasColumnName("auth_context_state")
                        .HasColumnOrder(101);

                    b.Property<Guid>("BankRegistrationId")
                        .HasColumnType("uuid")
                        .HasColumnName("bank_registration_id")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("ExternalApiId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("external_api_id")
                        .HasColumnOrder(100);

                    b.Property<string>("ExternalApiUserId")
                        .HasColumnType("text")
                        .HasColumnName("external_api_user_id");

                    b.Property<DateTimeOffset>("ExternalApiUserIdModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("external_api_user_id_modified");

                    b.Property<string>("ExternalApiUserIdModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("external_api_user_id_modified_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTimeOffset>("IsDeletedModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("is_deleted_modified");

                    b.Property<string>("IsDeletedModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("is_deleted_modified_by");

                    b.Property<string>("Reference")
                        .HasColumnType("text")
                        .HasColumnName("reference");

                    b.Property<string>("_accessTokenAccessToken")
                        .HasColumnType("text")
                        .HasColumnName("access_token_access_token")
                        .HasColumnOrder(105);

                    b.Property<int>("_accessTokenExpiresIn")
                        .HasColumnType("integer")
                        .HasColumnName("access_token_expires_in")
                        .HasColumnOrder(106);

                    b.Property<DateTimeOffset>("_accessTokenModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("access_token_modified")
                        .HasColumnOrder(108);

                    b.Property<string>("_accessTokenModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("access_token_modified_by")
                        .HasColumnOrder(109);

                    b.Property<string>("_accessTokenRefreshToken")
                        .HasColumnType("text")
                        .HasColumnName("access_token_refresh_token")
                        .HasColumnOrder(107);

                    b.HasKey("Id")
                        .HasName("pk_account_access_consent");

                    b.HasIndex("AccountAndTransactionApiId")
                        .HasDatabaseName("ix_account_access_consent_account_and_transaction_api_id");

                    b.HasIndex("BankRegistrationId")
                        .HasDatabaseName("ix_account_access_consent_bank_registration_id");

                    b.ToTable("account_access_consent", (string)null);
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.AuthContext", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("discriminator");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTimeOffset>("IsDeletedModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("is_deleted_modified");

                    b.Property<string>("IsDeletedModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("is_deleted_modified_by");

                    b.Property<string>("Nonce")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nonce");

                    b.Property<string>("Reference")
                        .HasColumnType("text")
                        .HasColumnName("reference");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("state");

                    b.HasKey("Id")
                        .HasName("pk_auth_context");

                    b.HasIndex("Nonce")
                        .IsUnique()
                        .HasDatabaseName("ix_auth_context_nonce");

                    b.HasIndex("State")
                        .IsUnique()
                        .HasDatabaseName("ix_auth_context_state");

                    b.ToTable("auth_context", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("AuthContext");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.AccountAndTransactionApiEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ApiVersion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("api_version");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uuid")
                        .HasColumnName("bank_id");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("base_url");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTimeOffset>("IsDeletedModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("is_deleted_modified");

                    b.Property<string>("IsDeletedModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("is_deleted_modified_by");

                    b.Property<string>("Reference")
                        .HasColumnType("text")
                        .HasColumnName("reference");

                    b.HasKey("Id")
                        .HasName("pk_account_and_transaction_api");

                    b.HasIndex("BankId")
                        .HasDatabaseName("ix_account_and_transaction_api_bank_id");

                    b.ToTable("account_and_transaction_api", (string)null);
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.Bank", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AuthorizationEndpoint")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("authorization_endpoint");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("CustomBehaviour")
                        .HasColumnType("jsonb")
                        .HasColumnName("custom_behaviour");

                    b.Property<string>("DcrApiVersion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("dcr_api_version");

                    b.Property<string>("FinancialId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("financial_id");

                    b.Property<string>("IdTokenSubClaimType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("id_token_sub_claim_type");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTimeOffset>("IsDeletedModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("is_deleted_modified");

                    b.Property<string>("IsDeletedModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("is_deleted_modified_by");

                    b.Property<string>("IssuerUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("issuer_url");

                    b.Property<string>("JwksUri")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("jwks_uri");

                    b.Property<string>("Reference")
                        .HasColumnType("text")
                        .HasColumnName("reference");

                    b.Property<string>("RegistrationEndpoint")
                        .HasColumnType("text")
                        .HasColumnName("registration_endpoint");

                    b.Property<bool>("SupportsSca")
                        .HasColumnType("boolean")
                        .HasColumnName("supports_sca");

                    b.Property<string>("TokenEndpoint")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token_endpoint");

                    b.HasKey("Id")
                        .HasName("pk_bank");

                    b.ToTable("bank", (string)null);
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.BankRegistration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(1);

                    b.Property<string>("AuthorizationEndpoint")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("authorization_endpoint");

                    b.Property<Guid?>("BankId")
                        .HasColumnType("uuid")
                        .HasColumnName("bank_id")
                        .HasColumnOrder(2);

                    b.Property<string>("BankProfile")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("bank_profile");

                    b.Property<string>("BankRegistrationGroup")
                        .HasColumnType("text")
                        .HasColumnName("bank_registration_group");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("DefaultRedirectUri")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("default_redirect_uri");

                    b.Property<string>("DefaultResponseMode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("default_response_mode");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTimeOffset>("IsDeletedModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("is_deleted_modified");

                    b.Property<string>("IsDeletedModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("is_deleted_modified_by");

                    b.Property<string>("JwksUri")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("jwks_uri");

                    b.Property<string>("OtherRedirectUris")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("other_redirect_uris");

                    b.Property<string>("Reference")
                        .HasColumnType("text")
                        .HasColumnName("reference");

                    b.Property<string>("RegistrationEndpoint")
                        .HasColumnType("text")
                        .HasColumnName("registration_endpoint");

                    b.Property<string>("RegistrationScope")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("registration_scope");

                    b.Property<string>("SoftwareStatementProfileId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("software_statement_profile_id");

                    b.Property<string>("SoftwareStatementProfileOverride")
                        .HasColumnType("text")
                        .HasColumnName("software_statement_profile_override");

                    b.Property<string>("TokenEndpoint")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token_endpoint");

                    b.Property<string>("TokenEndpointAuthMethod")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("token_endpoint_auth_method");

                    b.Property<string>("_externalApiId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("external_api_id");

                    b.Property<string>("_externalApiSecret")
                        .HasColumnType("text")
                        .HasColumnName("external_api_secret");

                    b.Property<string>("_registrationAccessToken")
                        .HasColumnType("text")
                        .HasColumnName("registration_access_token");

                    b.HasKey("Id")
                        .HasName("pk_bank_registration");

                    b.HasIndex("BankId")
                        .HasDatabaseName("ix_bank_registration_bank_id");

                    b.ToTable("bank_registration", (string)null);
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.PaymentInitiationApiEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ApiVersion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("api_version");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uuid")
                        .HasColumnName("bank_id");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("base_url");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTimeOffset>("IsDeletedModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("is_deleted_modified");

                    b.Property<string>("IsDeletedModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("is_deleted_modified_by");

                    b.Property<string>("Reference")
                        .HasColumnType("text")
                        .HasColumnName("reference");

                    b.HasKey("Id")
                        .HasName("pk_payment_initiation_api");

                    b.HasIndex("BankId")
                        .HasDatabaseName("ix_payment_initiation_api_bank_id");

                    b.ToTable("payment_initiation_api", (string)null);
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.VariableRecurringPaymentsApiEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ApiVersion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("api_version");

                    b.Property<Guid>("BankId")
                        .HasColumnType("uuid")
                        .HasColumnName("bank_id");

                    b.Property<string>("BaseUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("base_url");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTimeOffset>("IsDeletedModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("is_deleted_modified");

                    b.Property<string>("IsDeletedModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("is_deleted_modified_by");

                    b.Property<string>("Reference")
                        .HasColumnType("text")
                        .HasColumnName("reference");

                    b.HasKey("Id")
                        .HasName("pk_variable_recurring_payments_api");

                    b.HasIndex("BankId")
                        .HasDatabaseName("ix_variable_recurring_payments_api_bank_id");

                    b.ToTable("variable_recurring_payments_api", (string)null);
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.PaymentInitiation.DomesticPaymentConsent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTimeOffset>("AuthContextModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("auth_context_modified")
                        .HasColumnOrder(103);

                    b.Property<string>("AuthContextModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("auth_context_modified_by")
                        .HasColumnOrder(104);

                    b.Property<string>("AuthContextNonce")
                        .HasColumnType("text")
                        .HasColumnName("auth_context_nonce")
                        .HasColumnOrder(102);

                    b.Property<string>("AuthContextState")
                        .HasColumnType("text")
                        .HasColumnName("auth_context_state")
                        .HasColumnOrder(101);

                    b.Property<Guid>("BankRegistrationId")
                        .HasColumnType("uuid")
                        .HasColumnName("bank_registration_id")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("ExternalApiId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("external_api_id")
                        .HasColumnOrder(100);

                    b.Property<string>("ExternalApiUserId")
                        .HasColumnType("text")
                        .HasColumnName("external_api_user_id");

                    b.Property<DateTimeOffset>("ExternalApiUserIdModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("external_api_user_id_modified");

                    b.Property<string>("ExternalApiUserIdModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("external_api_user_id_modified_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTimeOffset>("IsDeletedModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("is_deleted_modified");

                    b.Property<string>("IsDeletedModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("is_deleted_modified_by");

                    b.Property<Guid?>("PaymentInitiationApiId")
                        .HasColumnType("uuid")
                        .HasColumnName("payment_initiation_api_id")
                        .HasColumnOrder(10);

                    b.Property<string>("Reference")
                        .HasColumnType("text")
                        .HasColumnName("reference");

                    b.Property<string>("_accessTokenAccessToken")
                        .HasColumnType("text")
                        .HasColumnName("access_token_access_token")
                        .HasColumnOrder(105);

                    b.Property<int>("_accessTokenExpiresIn")
                        .HasColumnType("integer")
                        .HasColumnName("access_token_expires_in")
                        .HasColumnOrder(106);

                    b.Property<DateTimeOffset>("_accessTokenModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("access_token_modified")
                        .HasColumnOrder(108);

                    b.Property<string>("_accessTokenModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("access_token_modified_by")
                        .HasColumnOrder(109);

                    b.Property<string>("_accessTokenRefreshToken")
                        .HasColumnType("text")
                        .HasColumnName("access_token_refresh_token")
                        .HasColumnOrder(107);

                    b.HasKey("Id")
                        .HasName("pk_domestic_payment_consent");

                    b.HasIndex("BankRegistrationId")
                        .HasDatabaseName("ix_domestic_payment_consent_bank_registration_id");

                    b.HasIndex("PaymentInitiationApiId")
                        .HasDatabaseName("ix_domestic_payment_consent_payment_initiation_api_id");

                    b.ToTable("domestic_payment_consent", (string)null);
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.VariableRecurringPayments.DomesticVrpConsent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTimeOffset>("AuthContextModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("auth_context_modified")
                        .HasColumnOrder(103);

                    b.Property<string>("AuthContextModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("auth_context_modified_by")
                        .HasColumnOrder(104);

                    b.Property<string>("AuthContextNonce")
                        .HasColumnType("text")
                        .HasColumnName("auth_context_nonce")
                        .HasColumnOrder(102);

                    b.Property<string>("AuthContextState")
                        .HasColumnType("text")
                        .HasColumnName("auth_context_state")
                        .HasColumnOrder(101);

                    b.Property<Guid>("BankRegistrationId")
                        .HasColumnType("uuid")
                        .HasColumnName("bank_registration_id")
                        .HasColumnOrder(1);

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text")
                        .HasColumnName("created_by");

                    b.Property<string>("ExternalApiId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("external_api_id")
                        .HasColumnOrder(100);

                    b.Property<string>("ExternalApiUserId")
                        .HasColumnType("text")
                        .HasColumnName("external_api_user_id");

                    b.Property<DateTimeOffset>("ExternalApiUserIdModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("external_api_user_id_modified");

                    b.Property<string>("ExternalApiUserIdModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("external_api_user_id_modified_by");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted");

                    b.Property<DateTimeOffset>("IsDeletedModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("is_deleted_modified");

                    b.Property<string>("IsDeletedModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("is_deleted_modified_by");

                    b.Property<string>("Reference")
                        .HasColumnType("text")
                        .HasColumnName("reference");

                    b.Property<Guid?>("VariableRecurringPaymentsApiId")
                        .HasColumnType("uuid")
                        .HasColumnName("variable_recurring_payments_api_id")
                        .HasColumnOrder(10);

                    b.Property<string>("_accessTokenAccessToken")
                        .HasColumnType("text")
                        .HasColumnName("access_token_access_token")
                        .HasColumnOrder(105);

                    b.Property<int>("_accessTokenExpiresIn")
                        .HasColumnType("integer")
                        .HasColumnName("access_token_expires_in")
                        .HasColumnOrder(106);

                    b.Property<DateTimeOffset>("_accessTokenModified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("access_token_modified")
                        .HasColumnOrder(108);

                    b.Property<string>("_accessTokenModifiedBy")
                        .HasColumnType("text")
                        .HasColumnName("access_token_modified_by")
                        .HasColumnOrder(109);

                    b.Property<string>("_accessTokenRefreshToken")
                        .HasColumnType("text")
                        .HasColumnName("access_token_refresh_token")
                        .HasColumnOrder(107);

                    b.HasKey("Id")
                        .HasName("pk_domestic_vrp_consent");

                    b.HasIndex("BankRegistrationId")
                        .HasDatabaseName("ix_domestic_vrp_consent_bank_registration_id");

                    b.HasIndex("VariableRecurringPaymentsApiId")
                        .HasDatabaseName("ix_domestic_vrp_consent_variable_recurring_payments_api_id");

                    b.ToTable("domestic_vrp_consent", (string)null);
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.AccountAndTransaction.AccountAccessConsentAuthContext", b =>
                {
                    b.HasBaseType("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.AuthContext");

                    b.Property<Guid>("AccountAccessConsentId")
                        .HasColumnType("uuid")
                        .HasColumnName("account_access_consent_id");

                    b.HasIndex("AccountAccessConsentId")
                        .HasDatabaseName("ix_auth_context_account_access_consent_id");

                    b.HasDiscriminator().HasValue("AccountAccessConsentAuthContext");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.PaymentInitiation.DomesticPaymentConsentAuthContext", b =>
                {
                    b.HasBaseType("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.AuthContext");

                    b.Property<Guid>("DomesticPaymentConsentId")
                        .HasColumnType("uuid")
                        .HasColumnName("domestic_payment_consent_id");

                    b.HasIndex("DomesticPaymentConsentId")
                        .HasDatabaseName("ix_auth_context_domestic_payment_consent_id");

                    b.HasDiscriminator().HasValue("DomesticPaymentConsentAuthContext");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.VariableRecurringPayments.DomesticVrpConsentAuthContext", b =>
                {
                    b.HasBaseType("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.AuthContext");

                    b.Property<Guid>("DomesticVrpConsentId")
                        .HasColumnType("uuid")
                        .HasColumnName("domestic_vrp_consent_id");

                    b.HasIndex("DomesticVrpConsentId")
                        .HasDatabaseName("ix_auth_context_domestic_vrp_consent_id");

                    b.HasDiscriminator().HasValue("DomesticVrpConsentAuthContext");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.AccountAndTransaction.AccountAccessConsent", b =>
                {
                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.AccountAndTransactionApiEntity", "AccountAndTransactionApiNavigation")
                        .WithMany("AccountAccessConsentsNavigation")
                        .HasForeignKey("AccountAndTransactionApiId")
                        .HasConstraintName("fk_account_access_consent_account_and_transaction_api_account_a");

                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.BankRegistration", "BankRegistrationNavigation")
                        .WithMany()
                        .HasForeignKey("BankRegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_account_access_consent_bank_registration_bank_registration_id");

                    b.Navigation("AccountAndTransactionApiNavigation");

                    b.Navigation("BankRegistrationNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.AccountAndTransactionApiEntity", b =>
                {
                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.Bank", "BankNavigation")
                        .WithMany("AccountAndTransactionApisNavigation")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_account_and_transaction_api_bank_bank_id");

                    b.Navigation("BankNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.BankRegistration", b =>
                {
                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.Bank", "BankNavigation")
                        .WithMany("BankRegistrationsNavigation")
                        .HasForeignKey("BankId")
                        .HasConstraintName("fk_bank_registration_bank_bank_id");

                    b.Navigation("BankNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.PaymentInitiationApiEntity", b =>
                {
                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.Bank", "BankNavigation")
                        .WithMany("PaymentInitiationApisNavigation")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_payment_initiation_api_bank_bank_id");

                    b.Navigation("BankNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.VariableRecurringPaymentsApiEntity", b =>
                {
                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.Bank", "BankNavigation")
                        .WithMany("VariableRecurringPaymentsApisNavigation")
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_variable_recurring_payments_api_bank_bank_id");

                    b.Navigation("BankNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.PaymentInitiation.DomesticPaymentConsent", b =>
                {
                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.BankRegistration", "BankRegistrationNavigation")
                        .WithMany()
                        .HasForeignKey("BankRegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_domestic_payment_consent_bank_registration_bank_registration");

                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.PaymentInitiationApiEntity", "PaymentInitiationApiNavigation")
                        .WithMany("DomesticPaymentConsentsNavigation")
                        .HasForeignKey("PaymentInitiationApiId")
                        .HasConstraintName("fk_domestic_payment_consent_payment_initiation_api_payment_init");

                    b.Navigation("BankRegistrationNavigation");

                    b.Navigation("PaymentInitiationApiNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.VariableRecurringPayments.DomesticVrpConsent", b =>
                {
                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.BankRegistration", "BankRegistrationNavigation")
                        .WithMany()
                        .HasForeignKey("BankRegistrationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_domestic_vrp_consent_bank_registration_bank_registration_id");

                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.VariableRecurringPaymentsApiEntity", "VariableRecurringPaymentsApiNavigation")
                        .WithMany("DomesticVrpConsentsNavigation")
                        .HasForeignKey("VariableRecurringPaymentsApiId")
                        .HasConstraintName("fk_domestic_vrp_consent_variable_recurring_payments_api_variab");

                    b.Navigation("BankRegistrationNavigation");

                    b.Navigation("VariableRecurringPaymentsApiNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.AccountAndTransaction.AccountAccessConsentAuthContext", b =>
                {
                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.AccountAndTransaction.AccountAccessConsent", "AccountAccessConsentNavigation")
                        .WithMany("AccountAccessConsentAuthContextsNavigation")
                        .HasForeignKey("AccountAccessConsentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_auth_context_account_access_consent_account_access_consent_id");

                    b.Navigation("AccountAccessConsentNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.PaymentInitiation.DomesticPaymentConsentAuthContext", b =>
                {
                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.PaymentInitiation.DomesticPaymentConsent", "DomesticPaymentConsentNavigation")
                        .WithMany("DomesticPaymentConsentAuthContextsNavigation")
                        .HasForeignKey("DomesticPaymentConsentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_auth_context_domestic_payment_consent_domestic_payment_consen");

                    b.Navigation("DomesticPaymentConsentNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.VariableRecurringPayments.DomesticVrpConsentAuthContext", b =>
                {
                    b.HasOne("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.VariableRecurringPayments.DomesticVrpConsent", "DomesticVrpConsentNavigation")
                        .WithMany("DomesticVrpConsentAuthContextsNavigation")
                        .HasForeignKey("DomesticVrpConsentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_auth_context_domestic_vrp_consent_domestic_vrp_consent_id");

                    b.Navigation("DomesticVrpConsentNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.AccountAndTransaction.AccountAccessConsent", b =>
                {
                    b.Navigation("AccountAccessConsentAuthContextsNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.AccountAndTransactionApiEntity", b =>
                {
                    b.Navigation("AccountAccessConsentsNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.Bank", b =>
                {
                    b.Navigation("AccountAndTransactionApisNavigation");

                    b.Navigation("BankRegistrationsNavigation");

                    b.Navigation("PaymentInitiationApisNavigation");

                    b.Navigation("VariableRecurringPaymentsApisNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.PaymentInitiationApiEntity", b =>
                {
                    b.Navigation("DomesticPaymentConsentsNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.BankConfiguration.VariableRecurringPaymentsApiEntity", b =>
                {
                    b.Navigation("DomesticVrpConsentsNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.PaymentInitiation.DomesticPaymentConsent", b =>
                {
                    b.Navigation("DomesticPaymentConsentAuthContextsNavigation");
                });

            modelBuilder.Entity("FinnovationLabs.OpenBanking.Library.Connector.Models.Persistent.VariableRecurringPayments.DomesticVrpConsent", b =>
                {
                    b.Navigation("DomesticVrpConsentAuthContextsNavigation");
                });
#pragma warning restore 612, 618
        }
    }
}
